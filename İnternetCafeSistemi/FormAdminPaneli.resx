<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAgAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAA
        AAkAAAAGAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAgSIBQgOvgUJEL4FCRC+BQkQvgUJEL4FCRC+BQkQvgUJ
        EL4FCRC+BQkQvgQHC7YBAQKOAAAAQgAAABMAAAAcAAAAIwAAABwAAAAMAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATRMhOfk4Yab/OWKo/zliqP85Yqj/OWKo/zli
        qP85Yqj/OWKo/zliqP85Yqj/Nl6g/ylHef8RHjPwAQED0QUKE90IEB/kBg4a3QMHDcQAAQGKAAAANAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5EBsu7UZyvv9UiOL/VIjh/1SH
        4f9Uh+D/U4be/1OG3v9Tht7/U4be/1OG3v9Shd7/UITe/0V1xv8dMVX/DRw0/yNLjf8kTI//H0J9/xUt
        VP8HDxvoAAAAdAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUBAQF7Ehwu7y9I
        df8/YqD/RWuu/012wP9YiNz/WIjd/1iI3f9YiN3/WIjd/1iI3f9YiN3/Vojf/0l5yv8VJD7/Hj90/y1d
        rP8sW6n/Klmm/yJIh/8LFyz3AAAAcQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAAA6AAAAshwiJ/8gJi3/ITNT/1eG2v9YiN3/WIjd/1iI3f9YiN3/WIjd/1iI3f9YiN3/WIrh/zFQ
        hP8TJkb/Ll6t/y5erf8uXq3/LV2s/yJIh/8GDRjiAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMFBgakfZGf/1Rhav8wTH3/WYrg/1iI3f9YiN3/WIjd/1iI3f9YiN3/WIjd/1iI
        3f9ZiuD/Qmen/xAfOf8sW6j/Ll6t/y5erf8uXq3/LV2s/xQpTP8AAAB2AAABAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADywzOMepxNb/PUhS/0BkpP9ZiuD/WIjd/1iI3f9YiN3/WIjd/1iI
        3f9YiN3/WIjd/1mK4P9CZaT/ESA6/y1cqP8uXq3/Ll6t/y5erf8vX7D/H0B2/wEDBaoAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwPEQAAAAAIobvNqsDg9f85RE7/QWan/1mK4P9YiN3/WIjd/1iI
        3f9YiN3/WIjd/1iI3f9YiN3/WYrh/ztak/8TJ0f/Ll6t/y5erf8uXq3/Ll6t/y9fr/8jSIX/AwYLvQAA
        AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAAAAAEVca3Twyer//1RibP8wS3z/Worh/1iI
        3f9YiN3/WIjd/1iI3f9YiN3/WIjd/1iI3f9Zid//SnS//ilRlP4uXq3/Ll6t/y5erf8uXq3/L2Cw/yBC
        ef8CAwavAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAGwAAAB1AAAAnEdTW/7D4/j/nLXE/yAr
        Ov9Daav/WYrg/1mJ3/9YiN3/WIjd/1iI3f9YiN3/WIjd/1WE1v8sR3b+KlWc/y5frv8uXq3/Ll6t/y5e
        rf8uXq7/FStP/wAAAHgAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBw3bHzVa/yZCcP8cMVT/GCU3/zpF
        T/93ipb/ZHaD/xkkN/8tRnP/SG+1/1WE1/9YiN3/WIjd/1iI3f9ZiuD/RWuu/xAdMv8qVp7/Ll6u/y5e
        rf8uXq3/L1+v/yVLiv8GDRfdAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQHDdsrSXz/SXrO/06C
        3P9Gd8r/MleY/x0yVP8iLTz/KT5i/yY8Yf8ZJj7/Qmal/1mK4P9YiN3/WIjd/1iI3f8nPGL/FzBY/y5f
        r/8uXq3/Ll6t/y5frv8qVp//DRwz+AAAAGoCBAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgMF
        Ca0THjHuLkd1/0p1wP9Uh+D/TYDY/zxkqv9BZab/WIjd/1F+zP9Ug9T/WIjd/1iI3f9ZiuD/RGqr/w8b
        MP8oUZX/Ll+u/y5erf8uXq3/LVyq/xQpS/4AAAGTAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACQAAADcBAQKTDhUj8zFMfP9TgNH/WYrh/1mJ4P9YiN3/WIne/1iI3v9YiN3/WYnf/1J+
        zP8aKUP/Gzdm/y5fr/8uXq3/Ll6t/y9fr/8lTY3/BQoT0gAAABsAAAAIAAAAMwAAAFcAAABXAAAANAAA
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoDAwO6HyUq/yExTv9LdL3/WYnf/1iI3f9YiN3/WIjd/1mJ
        3/9UgtT/JDhb/xMmRv8sW6f/Ll6u/y5erf8uXq3/L1+w/yJFgP8CBQm1AAAANQIDBqsJEyPuDyA9/Q8h
        Pv0JEyTvAQMGrAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAKE+Um//MUp1/xglPP9Lc7v/WYnf/1iI
        3f9Zid//Un/O/yU5Xf8RIT3/Klaf/y5frv8uXq3/Ll6t/y5erf8uX6//J1CT/wYMFegDBw3cFzFc/yZQ
        lv8pV6P/KVej/yZQlv8WL1j/AwYMxwAAACUAAAAAAAAAEwAAAHAICxPJFiI49Dpakv9Yh9z/NlOH/0No
        qf9Zid//WYnf/0x1vv8cLEj/EiVF/ypWnv8uX6//Ll6t/y5erf8uXq3/Ll6t/y5erf8sWqb/DBku/xYu
        V/8sWqj/LV2s/y5erP8uXqz/LV2s/ytZpf8SJkj+AAAAkQAAAB4EBgmvIDJR/URoqv9UgtP/WIne/1iI
        3v9Zid//WIjd/1iI3f9ZiuD/PV2Y/wwWKP8qVp7/Ll+v/y5erf8uXq3/Ll6t/y5erf8uXq3/Ll+u/ylT
        mf8MGS7/J1CU/y5frv8uXq3/Ll6t/y5erf8uXq3/Ll+v/yJGgf8DBgzbAAAAkyU6Xv5VhNb/WYrg/1iI
        3v9VhNb/WIjc/1iI3f9YiN3/WIjd/1iJ3v9Rfsz/FSM5/yNJh/8vX6//Ll6t/y5erf8uXq3/Ll6t/y5e
        rf8uX67/KFKW/wwZLv8pVJr/Ll+v/y5erf8uXq3/Ll6t/y5erf8uX67/KFKX/wcOGfcFBwzQQWWk/1mK
        4f9Zid//R26z/xknP/8/Yp//WYnf/1iI3f9YiN3/WIjd/1iI3f8iNVf/HDpq/y9gsP8uXq3/Ll6t/y5e
        rf8uXq3/Ll6t/y5erf8tXKn/ESRC/xYtVP8tXKn/Ll6t/y5erf8uXq3/Ll6t/y5frv8pVJv/CBAd/QIE
        BsA7W5X/Wovh/1mK4f86WpL/AAAA/y5Idf9ZiuD/WIjd/1iI3v9Zid//WYnf/yY6Xv8bOGf/L2Cw/y5e
        rf8uXq3/Ll6t/y5erf8uXq3/Ll6t/y5frv8oUZb/GTNe/ytYov8uXq7/Ll6t/y5erf8uXq3/Ll+v/ydQ
        lP8GDBbyAAAAbBsqRPdSf8//WYrh/1F9yv80UYP/THa//1mJ3v9YiN7/U4DP/0lwtv9UgtT/GCU8/xYu
        Vf8uX6//Ll6t/y5erf8uXq3/Ll6t/y5erf8uXq3/Ll6t/y5frv8uX67/Ll6t/y5erf8uXq3/Ll6t/y5e
        rf8vX7D/IUN8/wIECMwAAAAOAgMEmSAxUP1Ldb7/WYrg/1qM4/9Yh9z/WIjd/1mJ3/9Mdr//GSc//yY7
        X/8GCQ/XBgwW4iVLiv8vX6//Ll6t/y5erf8uXq3/Ll6t/y5erf8uXq3/Ll6t/y5erf8uXq3/Ll6t/y5e
        rf8uXq3/Ll6t/y5erf8UKEr9AAAAgQAAAAAAAAAQAAEBfg4WJOosRG7/Q2en/ypBav9Ib7T/WYrg/1mK
        4P80UIP/AQED5AAAAEEAAABjDRow9ilUm/8vX6//Ll6t/y5erf8uXq3/Ll6t/y5erf8uXq3/Ll6t/y5e
        rf8uXq3/Ll6t/y5erf8vYLD/I0eD/wUKE9MAAAAmAAAAAAAAAAAAAAAAAAAAYwIEB/gPGzH/Bw0X/yI0
        Vf9Whdj/Wovi/zVShf8AAACXHCtGAAAAAAcAAACGDx43+ihSlv8vYLD/Ll6u/y5erf8uXq3/Ll6t/y5e
        rf8uXq3/Ll6t/y5erf8uXq7/L2Cw/yVNjf8KFSbxAAAAWgABAQAAAAAAAAAAAAAAAAAAAAAMAQIFqho0
        Yf8oUZf/ChMi/zZThv9Sfs3/GSc/9wAAAFIAAAAAAAAAAAAAAAoAAAB8ChQk7x49cP8rWKL/Ll+u/y5e
        rv8vX6//L1+w/y9fsP8vYLD/Ll+u/ypXn/8cOmr/CBAe6QAAAGgAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAoBQoSyA4cNPsCBAe6CQ4Y0xYhNvsDBAecAAAACwAAAAAAAAAAAAAAAAAAAAQAAABGAgQIswsW
        KPAYMFn7Klaf7iRJh/0iRX//IUN7/xw6a/8UKk3+ChQl7QIDBqwAAAA9AAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAhAAAASwAAABMAAAAlAAAASgAAABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAKAAAAOQIDBlwZMl08BQoSmwIFCLYCBAetAAEClgAAAGwAAAA0AAAACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////8AB//+AAAP/gAAA/4AAAH+AAAA/wAAAP+AAAD/gAAAf4AAAH+AA
        AB8AAAA/AAAAPwAAAH8AAAB/gAAAA+AAAAHgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AADgCAAB4AwAAfAOAAP4H4AP///4//////8=
</value>
  </data>
</root>